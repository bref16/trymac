name: macOS build & release

on:
  workflow_dispatch: {}        # allow manual runs from the Actions tab
  push:
    tags: ['v*']               # run automatically on version tags like v1.0.0

# needed to publish releases with the GITHUB_TOKEN
permissions:
  contents: write

jobs:
  build-macos:
    # Build both Apple Silicon (arm64) and Intel (x86_64)
    strategy:
      matrix:
        include:
          - runner: macos-14   # Apple Silicon
            arch: arm64
          - runner: macos-13   # Intel
            arch: x86_64

    runs-on: ${{ matrix.runner }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: requirements.txt

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pyinstaller pyinstaller-hooks-contrib

      # === Option A: normalize indentation & line endings to avoid IndentationError ===
      - name: Normalize indentation (tabs -> 4 spaces) and line endings
        run: |
          python - <<'PY'
          import pathlib
          p = pathlib.Path("mag_panel.py")
          s = p.read_text(encoding="utf-8")
          # Normalize line endings
          s = s.replace("\r\n", "\n").replace("\r", "\n")
          # Convert tabs to 4 spaces everywhere
          s = "\n".join(line.expandtabs(4) for line in s.split("\n"))
          p.write_text(s + ("\n" if not s.endswith("\n") else ""), encoding="utf-8")
          PY

      - name: Syntax check (fail fast)
        run: python -m py_compile mag_panel.py

      - name: Build MAG Config.app (Qt)
        run: |
          pyinstaller --noconfirm --windowed \
            --name "MAG Config" mag_panel.py \
            --add-data "template.xlsx:."

      - name: Build PG Admin GUI.app (Tk)
        run: |
          pyinstaller --noconfirm --windowed \
            --name "PG Admin GUI" pg_admin_gui.py

      - name: Zip apps (preserve mac metadata)
        run: |
          ditto -c -k --sequesterRsrc --keepParent "dist/MAG Config.app" "MAG-Config-macOS-${{ matrix.arch }}.zip"
          ditto -c -k --sequesterRsrc --keepParent "dist/PG Admin GUI.app" "PG-Admin-GUI-macOS-${{ matrix.arch }}.zip"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macOS-apps-${{ matrix.arch }}
          path: |
            MAG-Config-macOS-${{ matrix.arch }}.zip
            PG-Admin-GUI-macOS-${{ matrix.arch }}.zip

      - name: Create GitHub Release (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            MAG-Config-macOS-${{ matrix.arch }}.zip
            PG-Admin-GUI-macOS-${{ matrix.arch }}.zip
