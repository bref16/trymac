name: macOS build & release

on:
  workflow_dispatch: {}
  push:
    tags: ['v*']

permissions:
  contents: write

# Cancel older in-progress runs for the same ref (saves time)
concurrency:
  group: macos-build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-macos:
    # Build Apple Silicon only while iterating. Re-enable Intel later if needed.
    runs-on: macos-14
    timeout-minutes: 40

    env:
      PIP_DISABLE_PIP_VERSION_CHECK: "1"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: requirements.txt

      # Optional: cache PyInstaller's own cache between runs
      - name: Cache PyInstaller cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pyinstaller
          key: pyinstaller-${{ runner.os }}-arm64-py311

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pyinstaller

      - name: Clean previous build artifacts/specs
        run: |
          rm -rf build dist
          rm -f "MAG Config.spec" "PG Admin GUI.spec"

      - name: Syntax check (fail fast)
        run: |
          python -m py_compile mag_panel.py
          python -m py_compile pg_admin_gui.py

      # ---- Main app (Qt/PySide6) ----
      # Rely on PyInstaller's PySide6 hook (no --collect-all to avoid duplicate frameworks)
      - name: Build MAG Config.app
        shell: bash
        run: |
          pyinstaller --noconfirm --windowed \
            --name "MAG Config" mag_panel.py \
            --add-data "template.xlsx:."

      # SAFE smoke test: start for 5s in offscreen mode, then terminate (prevents hanging)
      - name: Smoke test MAG Config (5s, offscreen)
        shell: bash
        run: |
          python - <<'PY'
          import os, subprocess, time, signal
          app = "dist/MAG Config.app/Contents/MacOS/MAG Config"
          env = os.environ.copy()
          env["QT_QPA_PLATFORM"] = "offscreen"
          env["QT_DEBUG_PLUGINS"] = "1"
          p = subprocess.Popen([app], env=env)
          time.sleep(5)
          p.terminate()
          try:
              p.wait(timeout=5)
          except Exception:
              p.kill()
          print("Started and terminated OK")
          PY

      # ---- Admin app (Tk) ----
      - name: Build PG Admin GUI.app
        shell: bash
        run: |
          pyinstaller --noconfirm --windowed \
            --name "PG Admin GUI" pg_admin_gui.py

      - name: Zip apps (preserve mac metadata)
        shell: bash
        run: |
          ditto -c -k --sequesterRsrc --keepParent "dist/MAG Config.app" "MAG-Config-macOS-arm64.zip"
          ditto -c -k --sequesterRsrc --keepParent "dist/PG Admin GUI.app" "PG-Admin-GUI-macOS-arm64.zip"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macOS-apps-arm64
          path: |
            MAG-Config-macOS-arm64.zip
            PG-Admin-GUI-macOS-arm64.zip

      - name: Create GitHub Release (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            MAG-Config-macOS-arm64.zip
            PG-Admin-GUI-macOS-arm64.zip
